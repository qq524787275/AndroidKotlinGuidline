Char
isSurrogate	Char
plusChar
equalsULong
toStringString
toUIntOrNullString
toUIntString
toULongOrNullString
toULongUInt
toStringUShort
toStringString
toUShortOrNullString
toUByteString
toUByteOrNullString
toUShortUByte
toStringString
padStartCharSequence
filterNotCharSequence
findAnyOfCharSequence
lastOrNullString
indentWidthCharSequence
indexOfAnyCharSequence
reversedString
removeSurroundingCharSequence
takeCharSequence
isNotEmptyString
sliceCharSequence
countCharSequence
onEachAppendable
appendElementCharSequence
associateWithToString
substringAfterString
filterString
takeWhileCharSequence
hasSurrogatePairAtCharSequence
lineSequenceCharSequence
isNullOrBlankCharSequence
matchesCharSequence
maxWithString
removePrefixCharSequence
indexOfFirstString
removeSuffixCharSequence
toCollectionCharSequence
mapToCharSequence
firstCharSequence
commonPrefixWithCharSequence
mapIndexedNotNullCharSequence
asIterableString
toRegexCharSequence
minByCharSequence
mapCharSequence
firstOrNullAppendable
appendString
subSequenceString
toByteOrNullCharSequence
filterIndexedToString
toLongOrNullCharSequence
allCharSequence
lastIndexOfAnyCharSequence
reduceCharSequence
associateByCharSequence
mapIndexedCharSequence
groupByToCharSequence
elementAtOrElseString
filterNotCharSequence
removeSurroundingCharSequence
removeRangeString
trimIndentCharSequence
getOrNullCharSequence
containsString
takeString
replaceBeforeLastString
dropString
substringAfterLastString
toShortOrNullCharSequence
mapIndexedToString
takeLastCharSequence
dropCharSequence
trimStartCharSequence
filterToCharSequence
removeSuffixCharSequence
iteratorCharSequence
foldRightCharSequence
singleCharSequence
associateWithString
replaceAfterCharSequence
commonSuffixWithCharSequence
linesCharSequence
rangesDelimitedByCharSequence
groupByCharSequence
reduceRightIndexedCharSequence
minWithString
orEmptyCharSequence
filterIndexedCharSequence
randomCharSequence
forEachIndexedCharSequence
getOrElseCharSequence
dropLastWhileString
padEndStringBuilder
appendCharSequence
associateCharSequence
substringCharSequence
forEachString
trimMarginCharSequence
toSetCharSequence
removePrefixCharSequence
takeLastWhileCharSequence
filterNotToCharSequence
singleOrNullString
dropLastCharSequence
associateToString
trimStartCharSequence
associateByToCharSequence
regionMatchesImplCharSequence
dropLastCharSequence
padStartCharSequence
indicesCharSequence
maxByCharSequence
startsWithCharSequence
splitToSequenceCharSequence
findCharSequence
chunkedCharSequence
replaceRangeCharSequence
replaceCharSequence
findLastAnyOfCharSequence
toHashSetCharSequence
reduceIndexedString
replaceAfterLastString
removeRangeCharSequence
indexOfLastString
takeLastWhileCharSequence
foldRightIndexedCharSequence
isNullOrEmptyString
substringBeforeLastCharSequence
windowedCharSequence
reduceRightCharSequence
lastCharSequence
toMutableListCharSequence
toListCharSequence
foldIndexedList
reindentCharSequence
indexOfCharSequence
noneCharSequence
elementAtOrNullString
trimEnd CharSequence
mapIndexedNotNullToCharSequence
dropWhileCharSequence
windowedSequenceCharSequence
groupingByCharSequence
anyCharSequence
lastIndexOfCharSequence
minString
replaceIndentCharSequence
chunkedSequenceCharSequence
lastIndexCharSequence
trimEndCharSequence
isEmptyString
filterIndexedCharSequence
zipWithNextString
reversedString
dropLastWhileCharSequence
filterCharSequence
isNotBlankCharSequence
sumByDoubleCharSequence
findLastString
trimCharSequence
padEndString
replaceBeforeString
replaceIndentByMarginCharSequence
maxString
prependIndentCharSequence
trimCharSequence
sumByCharSequence
endsWithString
partitionCharSequence
flatMapString
replaceRangeCharSequence
takeWhileCharSequence
zipCharSequence
foldCharSequence
partitionCharSequence
asSequenceCharSequence
replaceFirstString
toIntOrNullString
dropWhileCharSequence
flatMapToCharSequence
subSequenceCharSequence
mapNotNullString
substringBeforeCharSequence
takeLastCharSequence
withIndexCharSequence
sliceCharSequence
mapNotNullToRandom
nextLongInt
takeUpperBitsRandom
nextIntRandom
nextUIntRandom
nextUBytesRandom
nextULongLong
toIntExactOrNullLong
coerceAtMostLong
toShortExactOrNullCharRange
randomShort
untilDouble
toLongExactOrNullLongProgression
reversedChar
downToLong
coerceAtLeastDouble
rangeToByte
downTo
Int
downToDouble
toShortExactOrNullFloat
toShortExactOrNullComparable
rangeTo
Byte
untilCharRange
contains	Int
untilLongProgression
stepShort
coerceInFloat
coerceAtLeastInt
toByteExactOrNullShort
toByteExactOrNull
Char
untilInt
coerceAtMostIntProgression
step
Long
untilClosedRange
containsLongRange
randomLong
downToComparable
coerceAtMostShort
coerceAtLeastFloat
toIntExactOrNullFloat
toByteExactOrNullLong
coerceInShort
downToFloat
coerceAtMostIntRange
containsComparable
coerceAtLeastCharProgression
reversedIntProgression
reversedByte
coerceAtLeastDouble
coerceAtMostIntRange
randomDouble
toByteExactOrNullByte
coerceAtMostByte
coerceInDouble
toIntExactOrNullLong
toByteExactOrNullFloat
toLongExactOrNullComparable
coerceInInt
coerceAtLeastFloat
coerceInCharProgression
stepShort
coerceAtMostLongRange
containsInt
toShortExactOrNullDouble
coerceAtLeastDouble
coerceInInt
coerceInUShort
coerceAtMostUInt
coerceAtMostULong
coerceAtLeastUInt
coerceInUByte
coerceInULong
coerceAtMostULong
coerceInUByte
coerceAtMostUShort
coerceInULong
untilUIntProgression
stepULong
downToUByte
downToUIntRange
randomUByte
untilULongProgression
stepUShort
untilUShort
downToUInt
downToUIntRange
containsUByte
coerceAtLeastULongProgression
reversed
UInt
untilUIntProgression
reversedUInt
coerceAtLeastULongRange
randomULongRange
containsUShort
coerceAtLeastSequence
sumBySequence
mapToSequence
sortedSequence
minBySequence
indexOfSequence
dropSequence
partitionSequence
constrainOnceSequence
flatMapSequence
mapNotNullToSequence
sortedWithSequence
foldIndexedSequence
maxWithSequence
associateByToSequence
elementAtOrNullSequence
filterSequence
plusSequence
withIndexSequence
takeWhileSequence
singleOrNullSequence
zipWithNextSequence
filterNotToSequence
containsSequence
maxBySequence
averageSequence
windowedSequence
minSequence
lastOrNullSequence
distinctBySequence
reduceIndexedSequence
indexOfFirstSequence
minusElementSequence
elementAtSequence
asIterableIterator
asSequenceSequence
groupByToSequence
groupBySequence
reduceSequence
indexOfLastSequence
associateSequence
mapIndexedNotNullToSequence
noneSequence
flattenSequence
groupingBySequence
lastSequence
lastIndexOfSequence
allSequence
distinctSequence
requireNoNullsSequence
filterNotNullSequence
mapNotNullSequence
mapIndexedToSequence
forEachIndexedSequence
associateToSequence
joinToSequence
joinToStringSequence
filterIndexedSequence
mapIndexedSequence
sortedByDescendingSequence
countSequence
takeSequence
firstSequence
flatMapToSequence
ifEmptySequence
minusSequence
zipSequence
sumByDoubleSequence
associateWithToSequence
mapIndexedNotNullSequence
sortedDescendingSequence
toMutableSetSequence
asSequenceSequence
associateWithSequence
maxSequence
dropWhileSequence
filterNotSequence
toMutableListSequence
minWithSequence
mapSequence
singleSequence
chunkedSequence
elementAtOrElseSequence
toCollectionSequence
firstOrNullSequence
orEmptySequence
forEachSequence
associateBySequence
findLastSequence
filterToSequence
toListSequence
unzipSequence
findSequence
foldSequence
plusElementSequence
filterIndexedToSequence
toSetSequence
onEachSequence
sortedBySequence
toHashSetSequence
filterNotNullToSequence
any Continuation
resumeWithExceptionContinuation
resumeMap
filterNotMap
asSequenceMap
minWithMap
filterNotToMap
withDefaultMap
optimizeReadOnlyMapEntry
toPairMap
getOrImplicitDefaultMap
filterValuesMap
mapNotNullMap
getMap
mapValuesEntry
component2Entry
component1Map
getOrElseNullableMap
mapValuesTo	Map
mapToMap
all	Map
minBy	Map
countMap
filterKeys
Map
filter	Map
maxByMap
containsValueMap
toMutableMapMap
flatMapToMap
forEachMap
mapMap
getOrElseMutableMap
withDefault	Map
minusMap
orEmptyMap
containsKeyMap
containsMap
plusMap
mapKeys
Map
onEachMap
flatMapMap
isNotEmptyMap
maxWithMap
filterToMutableMap
putAllMap
mapNotNullToSequence
toMapMutableMap
setMap
anyArray
toMapMutableMap
plusAssignIterable
toMapMutableMap
minusAssignMutableMap
getOrPutMap
mapKeysToMap
isNullOrEmptyMutableMap
iteratorMap
none	Map
toMapMap
asIterable
Map
toListMap
iteratorSet
plusSet
optimizeReadOnlySetSet
orEmptySet
minusElementSet
plusElement	Set
minusGrouping
foldGrouping
aggregateToGrouping
aggregateGrouping
reduceToGrouping
eachCountToGrouping
foldToGrouping
reduceIterable
joinToStringIterable
toMutableSetList
elementAtOrElseIterable
firstOrNullIterable
joinToIterable
toMutableListIterable
minusElementIterable
subtractIterable
mapNotNullToList
binarySearchByList
lastOrNullIterable
associateByArray
asCollectionIterable
onEachList
findLastList
dropLastIterable
toHashSetList
asReversedList
reduceRightIterable
findList
reduceRightIndexedIterable
firstCollection
safeToConvertToSetIterable
filterIndexedList
elementAtIterable
flatMapIterable
averageList
lastIndexIterable
sortedByIterable
maxByIterable
filterNotNullIterable
reversedIterable
minBy	List
lastIterable
filterNotNullToMutableCollection
retainAllIterable
groupByToIterable
windowedIterable
zipWithNextMutableList
sortByIterable
reduceCollection
countIterable
anyIterable
dropWhileCollection
plusElementMutableCollection
removeAllMutableList
retainAllIterable
elementAtIterable
reduceIndexedIterable
asSequenceMutableIterable
retainAllIterable
minMutableList
sortDescendingCollection
toFloatArrayCollection
toBooleanArrayList
component5List
component4List
component3List
dropLastWhileList
component1Iterable
mapNotNullList
getOrNullCollection
toMutableListCollection
toCharArrayIterable
indexOfFirstIterable
filterIterable
collectionSizeOrNullList
component2MutableCollection
retainNothingCollection
toByteArrayIterable
mapIndexedToCollection
plusIterable
takeWhileIterable
distinctIterable
mapIndexedNotNullToCollection
indicesIterable
filterNotToMutableList
removeAllIterable
associateByToIterable
associateToIterable
foldIndexedIterable
containsMutableIterable
removeAllIterable
distinctByIterable
withIndexCollection
toIntArrayList
foldRightIndexedIterable
allList
singleIterable
requireNoNullsIterable
plusElementIterator
withIndexIterable
chunkedIterable
filterNotMutableList
removeList
takeLastWhileMutableCollection
addAllIterable
filterTo(Iterable
convertToSetForSetOperationWithList
elementAtOrNullIterable
toListIterable
toCollectionList
orEmptyIterable
indexOfLastIterable
sumByList
binarySearchIterator
forEachIterable
minusIterable
flattenList
indexOfIterable
intersectCollection
toShortArrayIterable
flatMapToIterable
singleMutableList
asReversedCollection
randomIterable
takeList
foldRightIterable
mapIndexedList
singleOrNullIterable
mapIterable
toSetList
reversePositionIndexIterable
lastIndexOfCollection
containsAll Iterable
collectionSizeOrDefaultIterable
sortedWithIterable
countIterable
groupByCollection
isNullOrEmptyIterable
noneIterable
plusCollection
toLongArrayList
requireNoNullsIterable
sumByDoubleIterable
findLastMutableCollection
removeIterable
indexOf
List
sliceMutableList
filterInPlaceIterable
mapToIterable
partitionIterable
unionMutableCollection
plusAssignIterable
maxIterable
forEachIterable
asIterableList
indexOfLast
List
firstIterable
sortedDescendingList
reverseElementIndexIterable
forEachIndexedIterable
mapIndexedNotNullMutableList
sortByDescendingIterable
lastIterator
iteratorIterable
associateWith$Iterable
convertToSetForSetOperationList
firstOrNullList
getOrElseMutableCollection
minusAssignCollection
isNotEmptyIterable
dropMutableIterable
filterInPlaceList
optimizeReadOnlyListIterable
elementAtOrNullList
lastIndexOfIterable
foldIterable
zipIterable
sortedIterable
filterIndexedToIterable
singleOrNullIterable
minWithIterable
sortedByDescendingIterable
unzipIterable
lastOrNullList
takeLastIterable
maxWithIterable
associateIterable
elementAtOrElseCollection
orEmptyIterable
groupingByIterable
associateWithToCollection
toDoubleArrayUShortArray
sortedArrayUShortArray
sumUByteArray
maxWithUShortArray
anyUByteArray
flatMapUByteArray
indexOfFirstUIntArray
findLastULongArray
reduceRightIndexedUByteArray
sortDescendingShortArray
toUShortArrayUByteArray
findLastUShortArray
noneUShortArray
singleOrNullULongArray
sortedDescendingUByteArray
minUShortArray
filterIndexedUIntArray
randomUByteArray
lastOrNullUByteArray
takeLastWhileUByteArray
copyOfRangeUByteArray
getOrNullUIntArray
forEachULongArray
filterIndexedToArray
toUShortArrayUByteArray
reduceRightULongArray
sortDescendingUByteArray
sumByUShortArray
reverseUShortArray
countUShortArray
toTypedArrayLongArray
toULongArrayUShortArray
maxByULongArray
maxWithLongArray
asULongArrayULongArray
flatMapUByteArray
component1ULongArray
reverseUShortArray
takeLastWhileUIntArray
toIntArrayUByteArray
noneULongArray
toLongArrayUByteArray
dropWhileULongArray
filterNotToUIntArray
contentToStringUIntArray
takeWhileUByteArray
takeWhileUByteArray
filterIndexedToUShortArray
reduceIndexedULongArray
groupByToUByteArray
foldRightUByteArray
reverseUIntArray
reduceULongArray
filterULongArray
foldRightUIntArray
maxWithUIntArray
flatMapULongArray
sortedArrayULongArray
findUIntArray
dropLastULongArray
foldULongArray
sliceUIntArray
noneUIntArray
lastOrNullUByteArray
reduceRightIndexedUIntArray
anyUIntArray
filterNotToUShortArray
asShortArrayUByteArray
indexOfLastUByteArray
sortedUShortArray
sumByDoubleUIntArray
sumUShortArray
lastIndexOfUIntArray
reversedArrayUShortArray
dropLastWhileULongArray
copyIntoShortArray
asUShortArrayUShortArray
elementAtOrElseUShortArray
dropWhileUIntArray
filterIndexedToULongArray
lastULongArray
sliceArrayUByteArray
dropUShortArray
minUByteArray
mapIndexedToUShortArray
singleUByteArray
filterUByteArray
sliceArrayUIntArray
groupByToUShortArray
lastIndexULongArray
indexOfFirstUShortArray
foldULongArray
mapToUIntArray
mapToUShortArray
flatMapToUIntArray
sortedDescendingULongArray
dropUIntArray
component4UShortArray
contentEqualsULongArray
mapIndexedToUIntArray
sliceUShortArray
elementAtOrNullUIntArray
sortDescendingUIntArray
sortedArrayUIntArray
takeLastWhileULongArray
reduceRightUShortArray
minWithIntArray
toUIntArrayUIntArray
minUIntArray
reverseUShortArray
lastULongArray
toTypedArrayUShortArray
forEachULongArray
filterToULongArray
sortedUShortArray
filterULongArray
copyOfUByteArray
toByteArrayUByteArray
mapToUShortArray
withIndexUByteArray
asByteArrayULongArray
lastOrNullUShortArray
toShortArrayUByteArray
foldUIntArray
indicesUShortArray
dropUByteArray
foldIndexedUByteArray
component5UByteArray
component4UByteArray
component3UByteArray
component2ULongArray
component2UShortArray
lastOrNullULongArray
reversedArrayUByteArray
takeUIntArray
sortedArrayDescendingUIntArray
sliceArrayUIntArray
forEachIndexedUByteArray
filterNotToUByteArray
lastUShortArray
reversedArrayUByteArray
maxUByteArray
copyOfUIntArray
lastUIntArray
foldUByteArray
mapUByteArray
singleOrNullUShortArray
maxWithULongArray
contentToStringIntArray
asUIntArrayUIntArray
dropUByteArray
filterIndexedULongArray
sortULongArray
indexOfLastUIntArray
indexOfFirstUShortArray
filterIndexedToUByteArray
minWithUShortArray
copyOfRangeULongArray
sumUShortArray
plusULongArray
anyULongArray
dropLastUIntArray
foldRightIndexedUIntArray
indexOfUByteArray
foldRightIndexedUShortArray
sortedUByteArray
firstOrNullULongArray
indicesULongArray
filterIndexedUShortArray
copyOfULongArray
copyOfRangeULongArray
asLongArrayUByteArray
zipUShortArray
getOrNullUIntArray
asIntArrayUShortArray
maxUIntArray
indexOfLastUByteArray
sumByDoubleUIntArray
component5UByteArray
contentToStringUIntArray
component3UIntArray
component2UIntArray
component1UByteArray
indexOfUShortArray
getOrElseUIntArray
groupByULongArray
lastIndexUShortArray
contentToStringUByteArray
reduceIndexedUShortArray
flatMapUByteArray
groupByToUByteArray
forEachIndexedULongArray
flatMapToArray
toUByteArrayULongArray
allUByteArray
plusUByteArray
allUIntArray
copyOfRangeULongArray
takeLastWhileUIntArray
dropLastWhileUIntArray
reversedULongArray
randomULongArray
withIndexUShortArray
foldRightIndexedUShortArray
copyIntoULongArray
firstUShortArray
sliceArrayUIntArray
firstUShortArray
zipUShortArray
indexOfULongArray
sumByULongArray
reduceIndexedUShortArray
sumByUIntArray
sumByUIntArray
elementAtOrElseULongArray
foldIndexedULongArray
indexOfUIntArray
takeLastUShortArray
filterNotUByteArray
sortArray
toUIntArrayUByteArray
takeLastUShortArray
reduceRightULongArray
groupByUShortArray
takeWhileUShortArray
takeLastUByteArray
mapIndexedUIntArray
lastIndexUIntArray
foldRightUShortArray
indexOfFirstULongArray
takeLastUIntArray
allByteArray
asUByteArrayUIntArray
flatMapToUByteArray
firstUByteArray
withIndexUShortArray
slice ULongArray
sortedArrayDescendingUShortArray
allULongArray
dropLastWhileULongArray
reversedULongArray
component5ULongArray
component4ULongArray
component3ULongArray
countULongArray
component1UShortArray
filterToUIntArray
countUIntArray
sortULongArray
maxByULongArray
findLastUIntArray
maxByUByteArray
flatMapToUShortArray
contentHashCodeUByteArray
contentHashCodeUIntArray
contentHashCodeUIntArray
filterIndexedULongArray
minUIntArray
mapUIntArray
maxUByteArray
randomULongArray
getOrElseUShortArray
component5UShortArray
component4UShortArray
component3UShortArray
component2UShortArray
component1UShortArray
mapUByteArray
groupByULongArray
singleULongArray
firstOrNullUIntArray
elementAtOrNullULongArray
contentEqualsUIntArray
singleUShortArray
mapToUIntArray
zipUByteArray
countULongArray
foldRightIndexedUIntArray
copyIntoUShortArray
reduceRightIndexedUShortArray
indexOfLastUByteArray
copyIntoUShortArray
findULongArray
getOrNullUIntArray
mapIndexedULongArray
forEachUByteArray
reversedULongArray
minWithULongArray
reduceUByteArray
sortedArrayUShortArray
groupByUShortArray
filterNotToUIntArray
mapIndexedToUIntArray
reduceIndexed!UShortArray
sortedArrayDescendingUIntArray
getOrElseULongArray
sumByDoubleArray
toULongArrayUByteArray
dropLastWhileUIntArray
withIndexUIntArray
filterUShortArray
indicesUShortArray
dropLastUByteArray
toTypedArrayUShortArray
sortULongArray
singleOrNullULongArray
minByByteArray
toUByteArrayUIntArray
minByUIntArray
toTypedArrayUIntArray
reduceRightIndexedUByteArray
contentEqualsUIntArray
filterToUIntArray
minWithUByteArray
findUByteArray
filterToUShortArray
mapIndexedToUIntArray
foldIndexedUByteArray
lastIndexUIntArray
getOrNullULongArray
filterNotUShortArray
forEachIndexedUShortArray
sortDescendingULongArray
elementAtOrElseUByteArray
maxByUIntArray
singleOrNullUShortArray
findLastUShortArray
minByUShortArray
takeUByteArray
minByUByteArray
sliceUShortArray
reversedUShortArray
foldIndexedUIntArray
takeULongArray
takeWhileUIntArray
findULongArray
mapIndexedUShortArray
sortedDescendingUShortArray
groupByTo UByteArray
sortedArrayDescendingUIntArray
contentEqualsUShortArray
reduceUShortArray
foldRightUIntArray
dropWhileULongArray
lastIndexOfUByteArray
forEachULongArray
maxULongArray
elementAtOrNullULongArray
plusUShortArray
mapIndexedUByteArray
reduceULongArray
mapUIntArray
sortedUByteArray
elementAtOrElseUByteArray
anyUShortArray
randomUIntArray
copyOfUIntArray
filterNotULongArray
contentHashCodeUIntArray
firstOrNullUByteArray
indicesULongArray
noneUByteArray
dropLastUIntArray
sumByDoubleUByteArray
reversedArrayUIntArray
lastIndexOfUByteArray
filterNotULongArray
forEachIndexedUByteArray
singleUIntArray
plusUByteArray
sumULongArray
takeUByteArray
lastIndexOfUIntArray
reduceRightUByteArray
getOrElseUShortArray
firstOrNullULongArray
zipUByteArray
elementAtOrNullULongArray
dropWhileUShortArray
firstUByteArray
sortedDescendingCollection
toUIntArrayCollection
toUShortArrayCollection
toUByteArrayCollection
toULongArraySequence
windowedSequenceMutableMap
setValueMutableMap
getValueIntArray
foldRightFloatArray
reduceRightLongArray
intersectCharArray
singleOrNullArray
sortedByLongArray
reduceRightIntArray
sortedByDoubleArray
associateByToByteArray
associateByCharArray
maxWithBooleanArray
mapShortArray
maxLongArray
allCharArray
dropLastWhileShortArray
mapLongArray
flatMapBooleanArray
sliceBooleanArray
foldShortArray
indexOfFirstArray
sortedArrayWithLongArray
lastIndexDoubleArray
lastOrNull	Array
minArray
mapIndexedNotNullIntArray
elementAtOrNullLongArray
takeLastWhileFloatArray
associateByShortArray
findLastIntArray
maxByLongArray
associateLongArray
countByteArray
flatMapByteArray
averageArray
maxWithByteArray
intersectByteArray
indexOfLastFloatArray
flatMapBooleanArray
subtractArray
contentDeepToStringImplArray
sortedArrayFloatArray
sortedArrayBooleanArray
intersectShortArray
flatMapDoubleArray
minByFloatArray
filterIndexedToCharArray
flatMapToDoubleArray
filterNotToCharArray
toMutableSetFloatArray
elementAtOrNullCharArray
foldRightIndexedShortArray
unionDoubleArray
findDoubleArray
anyBooleanArray
singleOrNullFloatArray
takeLastShortArray
associateByToDoubleArray
withIndexIntArray
indicesCharArray
indexOfFirstFloatArray
associateLongArray
toMutableSetLongArray
groupByArray
withIndexArray
filterNotShortArray
zipCharArray
dropWhileShortArray
takeWhileCharArray
getOrElseCharArray
foldFloatArray
findCharArray
toListFloatArray
isNotEmptyFloatArray
toMutableSetBooleanArray
indexOfBooleanArray
associate
Array
noneArray
foldIndexedByteArray
maxByByteArray
getOrNullDoubleArray
toMutableListIntArray
isEmptyDoubleArray
allFloatArray
singleLongArray
joinToShortArray
dropLastWhileBooleanArray
associateToShortArray
mapToShortArray
forEachIndexedShortArray
anyCharArray
distinctByDoubleArray
noneFloatArray
takeArray
mapToFloatArray
component3FloatArray
randomCharArray
isEmptyIntArray
noneBooleanArray
joinToBooleanArray
lastIndexOf ShortArray
sortedArrayDescendingFloatArray
partitionArray
mapIndexedBooleanArray
findCharArray
elementAtOrElseLongArray
toSetLongArray
reduceRightIndexedArray
sortByDescendingFloatArray
toSetByteArray
getOrElseCharArray
toSetIntArray
sumByCharArray
sortedArrayDescendingDoubleArray
flatMapToFloatArray
dropLastShortArray
sortDescendingBooleanArray
distinctCharArray
lastIndexBooleanArray
indexOfFirstFloatArray
joinToLongArray
foldRightArray
isEmptyShortArray
distinctByShortArray
indicesArray
joinToFloatArray
component4IntArray
groupByToDoubleArray
elementAtOrElse FloatArray
sortedArrayDescendingIntArray
foldRightIndexedShortArray
noneBooleanArray
filterToIntArray
firstArray
toBooleanArrayBooleanArray
takeByteArray
elementAtOrElseFloatArray
sliceArrayCharArray
findLastFloatArray
maxByFloatArray
toCollectionLongArray
sortedDoubleArray
getOrElseDoubleArray
asIterableDoubleArray
singleFloatArray
subtractFloatArray
takeWhileFloatArray
lastOrNullLongArray
dropLastWhileByteArray
foldLongArray
sumByDoubleByteArray
reduceRightIndexedDoubleArray
sortedByShortArray
containsDoubleArray
randomFloatArray
foldIndexedByteArray
toListDoubleArray
reduceRightCharArray
reduceIndexedLongArray
minLongArray
maxWithCharArray
filterLongArray
foldIndexedArray
filterNotNullCharArray
findShortArray
mapIndexedToBooleanArray
asIterableIntArray
filterIndexedToByteArray
sumByIntArray
filterArray
singleOrNullByteArray
findLastCharArray
component5CharArray
component4CharArray
component3CharArray
component2CharArray
component1
Array
dropLongArray
takeWhileByteArray
firstByteArray
sortedArrayDescendingArray
toDoubleArrayByteArray
sumByDoubleShortArray
toHashSetIntArray
sumDoubleArray
dropByteArray
indicesBooleanArray
takeLastIntArray
forEachArray
contentDeepEqualsImplCharArray
lastOrNullIntArray
mapIndexedIntArray
dropShortArray
associateToByteArray
countShortArray
withIndexIntArray
toHashSetBooleanArray
toSetCharArray
countShortArray
component5ShortArray
component4ShortArray
component3ShortArray
component2ShortArray
component1LongArray
maxByBooleanArray
foldRightIndexedDoubleArray
singleOrNullDoubleArray
associateDoubleArray
component4ByteArray
flatMapToByteArray
associateToDoubleArray
groupByArray
associateArray
findLastFloatArray
sumByArray
requireNoNullsIntArray
findLastShortArray
dropShortArray
lastOrNullDoubleArray
reduceRightIndexedArray
sortedWithShortArray
getOrNullBooleanArray
reduceRightIndexedFloatArray
sortDescendingArray
indexOfFirstFloatArray
maxFloatArray
minShortArray
firstOrNullByteArray
minFloatArray
sumIntArray
associateToArray
mapNotNullBooleanArray
filterIndexedToBooleanArray
reduceRightFloatArray
firstArray
averageDoubleArray
sliceBooleanArray
elementAtOrNullFloatArray
mapArray
lastIndexOfShortArray
indexOfFloatArray
lastIndexOfShortArray
joinToStringArray
randomCharArray
forEachIndexedDoubleArray
takeLastWhileShortArray
firstArray
filterToLongArray
sortedWithBooleanArray
reverseShortArray
filterIndexedToCharArray
reduceRightIndexedFloatArray
withIndexArray
reduceRightIndexedIntArray
containsShortArray
elementAtOrNullLongArray
containsByteArray
sortedByShortArray
reduceBooleanArray
mapIndexedDoubleArray
dropLastWhileCharArray
containsLongArray
elementAtOrElseByteArray
isNotEmptyByteArray
takeIntArray
takeLastWhileArray
isNullOrEmptyBooleanArray
isNotEmptyIntArray
mapShortArray
subtractIntArray
zipCharArray
sortDescendingFloatArray
elementAtOrElseIntArray
toMutableSetShortArray
dropWhileIntArray
filterNotToLongArray
elementAtOrNullIntArray
joinToStringShortArray
sortedArrayArray
associateByIntArray
reduceShortArray
toCollectionShortArray
sumByDoubleCharArray
takeIntArray
flatMapArray
reduceRightIntArray
findByteArray
joinToBooleanArray
dropLastLongArray
toHashSetIntArray
foldFloatArray
toListArray
asSequenceByteArray
mapIndexedToByteArray
containsLongArray
sumByDoubleArray
sliceArrayCharArray
minBooleanArray
isEmptyShortArray
takeLongArray
filterCharArray
foldIndexedByteArray
toMutableSetArray
takeLastWhileFloatArray
flatMapToFloatArray
mapIndexedToArray
mapIndexedNotNullToLongArray
firstShortArray
countByteArray
component5ByteArray
component4ByteArray
component3ByteArray
component2IntArray
sortedWithLongArray
asSequenceDoubleArray
maxWithDoubleArray
foldIndexedArray
countFloatArray
reversedFloatArray
anyFloatArray
toMutableListIntArray
firstOrNullByteArray
forEachByteArray
sliceArrayByteArray
indexOfFirstDoubleArray
zipBooleanArray
sliceArrayByteArray
maxIntArray
toCollection	Array
zipShortArray
lastIndexByteArray
mapArray
filterNotNullToFloatArray
getOrElseCharArray
reduceRightCharArray
filterNotLongArray
indexOfFloatArray
minByBooleanArray
reduceIndexedLongArray
getOrNullArray
filterFloatArray
reduceIndexedIntArray
lastFloatArray
lastIntArray
partitionByteArray
sortedArray
mapNotNullToIntArray
groupByBooleanArray
filterNotToDoubleArray
reversedArrayBooleanArray
reversedFloatArray
allByteArray
withIndexArray
containsFloatArray
distinctByShortArray
distinctArray
indexOfLastCharArray
reverseFloatArray
indexOfLastBooleanArray
zipBooleanArray
sumByDoubleIntArray
takeWhileShortArray
partitionShortArray
filterToBooleanArray
toMutableSetLongArray
indexOfLastLongArray
sortedArrayDescendingLongArray
foldCharArray
groupByToBooleanArray
mapToByteArray
dropCharArray
indicesFloatArray
indexOfDoubleArray
findLastByteArray
filterNotBooleanArray
lastArray
reverseIntArray
elementAtOrElseCharArray
subtractIntArray
asSequenceFloatArray
filterByteArray
findBooleanArray
firstOrNullBooleanArray
getOrNullFloatArray
joinToStringArray
getOrElseBooleanArray
reversedArray!DoubleArray
sortedArrayDescendingCharArray
maxFloatArray
reversedArrayCharArray
lastIndexOfIntArray
sortedByDescendingCharArray
mapLongArray
subtractArray
indicesLongArray
joinToStringLongArray
averageCharArray
mapIndexedBooleanArray
filterIndexedShortArray
foldRightDoubleArray
filterNotDoubleArray
lastIndexOfShortArray
associateByShortArray
groupByLongArray
toMutableListByteArray
anyDoubleArray
reduceIndexedLongArray
minByFloatArray
groupByByteArray
groupByToBooleanArray
toCollectionLongArray
indexOfFirstIntArray
sliceFloatArray
sortedByCharArray
intersectShortArray
toSetByteArray
takeLastWhileArray
toHashSetFloatArray
dropWhileArray
toSetLongArray
sortedByDescendingShortArray
mapIndexedCharArray
lastBooleanArray
filterByteArray
allCharArray
minWithDoubleArray
groupByToIntArray
maxWithCharArray
mapToLongArray
toCollectionCharArray
maxByCharArray
sliceArray!Array
contentDeepToStringInternalArray
groupByToIntArray
associateByIntArray
min
Array
foldShortArray
singleCharArray
associateArray
component4FloatArray
component1FloatArray
component2Array
reduceDoubleArray
unionCharArray
associateByArray
sortedCharArray
distinctLongArray
filterToBooleanArray
unionArray
subtractArray
minWithDoubleArray
foldLongArray
reduceBooleanArray
associateByToByteArray
sortedByDescendingLongArray
partitionByteArray
sortedArrayCharArray
filterToFloatArray
associateByToIntArray
subtractByteArray
sliceDoubleArray
isNotEmptyByteArray
groupByCharArray
sumByArray
toMutableSetBooleanArray
reduceByteArray
filterNotToArray
toMutableListFloatArray
sortedLongArray
reversedArrayLongArray
takeDoubleArray
joinToStringLongArray
findLastBooleanArray
flatMapToDoubleArray
joinToLongArray
sortedArrayCharArray
filterIndexedDoubleArray
indexOfDoubleArray
intersectBooleanArray
countLongArray
asIterableShortArray
filterNotToDoubleArray
mapDoubleArray
mapToBooleanArray
dropLastWhileArray
intersectBooleanArray
toMutableListCharArray
takeLastWhileFloatArray
dropLastWhileArray
sumByDoubleIntArray
sliceArrayShortArray
foldCharArray
forEachCharArray
allShortArray
maxWithIntArray
sortedDescendingByteArray
filterToCharArray
indexOfLastBooleanArray
sortedWithFloatArray
maxWithDoubleArray
filterIndexedToLongArray
reverseArray
filterIndexedBooleanArray
associateByByteArray
lastIntArray
mapIndexedToArray
maxByBooleanArray
partitionIntArray
getOrNullByteArray
firstOrNullCharArray
sortedWithByteArray
mapIndexedFloatArray
indicesArray
forEachFloatArray
sliceIntArray
reduceRightCharArray
unionBooleanArray
takeWhileByteArray
lastOrNullArray
sortByDoubleArray
sortedCharArray
mapIndexedToIntArray
maxByteArray
distinctByDoubleArray
toCollectionBooleanArray
distinctByDoubleArray
sortedByDescendingLongArray
distinctCharArray
foldRightBooleanArray
sortedByDescendingFloatArray
forEachIndexedIntArray
distinctDoubleArray
subtractByteArray
filterShortArray
dropLastShortArray
sortedWithIntArray
asIterableLongArray
associateByToLongArray
isEmptyIntArray
filterToArray
toLongArrayByteArray
reduceShortArray
flatMapTo
Array
takeIntArray
dropWhileByteArray
singleOrNullByteArray
maxWithArray
sortedByDescendingArray
isNotEmptyShortArray
takeLastWhileIntArray
lastIndexOfBooleanArray
indicesShortArray
reversedIntArray
sortedArrayShortArray
sumByDoubleArray
takeCharArray
minByIntArray
takeArray
sumByShortArray
getOrElseCharArray
asSequenceCharArray
reduceByteArray
foldRightLongArray
minWithLongArray
isNotEmptyCharArray
associateToShortArray
findFloatArray
isEmptyLongArray
sumIntArray
reverseBooleanArray
mapIndexedToShortArray
randomDoubleArray
component5Array
firstDoubleArray
component3DoubleArray
component2DoubleArray
component1LongArray
sliceCharArray
takeWhileArray
unionShortArray
maxByDoubleArray
associateToShortArray
foldIndexedArray
unzipByteArray
forEachIndexedBooleanArray
minWithShortArray
takeLastShortArray
elementAtOrElseIntArray
indexOfDoubleArray
containsIntArray
singleLongArray
dropDoubleArray
foldRightIntArray
lastIndexIntArray
anyShortArray
asSequence	Array
maxArray
foldRightByteArray
sortedDescending	Array
mapBooleanArray
sortedByBooleanArray
component5Array
flatMapBooleanArray
component3BooleanArray
component2BooleanArray
component1BooleanArray
elementAtOrElseArray
sliceArrayLongArray
findFloatArray
groupByToArray
toShortArrayArray
toFloatArrayBooleanArray
component4IntArray
unionByteArray
foldRightIndexedFloatArray
findLastLongArray
component5LongArray
component4LongArray
component3LongArray
component2LongArray
component1ByteArray
takeWhileBooleanArray
lastOrNullFloatArray
filterNotIntArray
allIntArray
toMutableListBooleanArray
toHashSetCharArray
sumByDoubleArray
elementAtOrElseCharArray
groupByFloatArray
noneLongArray
dropLastIntArray
flatMapToFloatArray
mapIndexedCharArray
toCollectionLongArray
forEachIndexedShortArray
associateByteArray
sortedWithDoubleArray
sumByDoubleDoubleArray
reverseShortArray
joinToCharArray
flatMapIntArray
reduceIndexedBooleanArray
maxByDoubleArray
sumLongArray
flatMapToLongArray
lastOrNullDoubleArray
sortedDescendingIntArray
mapToBooleanArray
joinToStringShortArray
singleOrNullByteArray
zipArray
distinctLongArray
lastArray
takeWhileCharArray
sortedDescendingFloatArray
intersectArray
toIntArrayArray
groupingByIntArray
countCharArray
reversedShortArray
reduceRightIndexedByteArray
unionIntArray
foldIndexedDoubleArray
foldRightIndexedLongArray
sortDescendingBooleanArray
noneShortArray
minByBooleanArray
foldRightShortArray
foldRightIndexedCharArray
dropLastLongArray
dropWhileLongArray
getOrElseArray
filterIndexedToArray
minByLongArray
randomDoubleArray
distinctByArray
takeLastArray
elementAtOrNullByteArray
reversedArray	Array
anyIntArray
forEachIndexedBooleanArray
forEachDoubleArray
filterToDoubleArray
distinct
Array
findArray
mapIndexedToFloatArray
averageLongArray
takeLastDoubleArray
isEmptyDoubleArray
countCharArray
toHashSetCharArray
takeLastIntArray
sortedArrayDescendingIntArray
reversedArrayByteArray
minByLongArray
mapIndexedToByteArray
subtractLongArray
withIndexByteArray
mapToDoubleArray
mapIndexedToByteArray
reduceRightBooleanArray
all	Array
allShortArray
allIntArray
sortDescendingLongArray
reduceIndexedIntArray
filterIndexedByteArray
asSequenceShortArray
sumCharArray
sortedDoubleArray
averageByteArray
indexOfFloatArray
reduceRightIndexedBooleanArray
dropWhileBooleanArray
getOrElseFloatArray
unionArray
flatMapToDoubleArray
minWithDoubleArray
filterCharArray
noneArray
dropLastFloatArray
associateToFloatArray
dropIntArray
dropLastFloatArray
sortedByDescendingArray
firstOrNullBooleanArray
foldIndexedByteArray
takeLastBooleanArray
sumByByteArray
toHashSetLongArray
associateToCharArray
getOrNullCharArray
asIterableArray
reversedArrayFloatArray
containsBooleanArray
firstArray
reversedIntArray
reversedCharArray
sliceIntArray
indexOfFirstByteArray
filterIndexedFloatArray
sortedWithFloatArray
mapToArray
singleCharArray
firstArray
joinToStringByteArray
toSetBooleanArray
dropLongArray
lastIndexOfLongArray
singleArray
filterNotToBooleanArray
lastIndexFloatArray
filterNotToShortArray
toListShortArray
asIterableShortArray
reduceRightCharArray
filterIndexedToLongArray
filterIndexedToIntArray
associateByToLongArray
filterIndexedCharArray
elementAtOrNullIntArray
reduceRightIndexedLongArray
filterNotToByteArray
distinctBooleanArray
flatMapBooleanArray
singleCharArray
anyFloatArray
reduceFloatArray
foldRightFloatArray
sumByDoubleIntArray
takeLastByteArray
toMutableListDoubleArray
forEach
Array
lastCharArray
zipShortArray
lastIndexOfFloatArray
component5BooleanArray
randomDoubleArray
associateByDoubleArray
elementAtOrNullLongArray
unionFloatArray
singleOrNullDoubleArray
sortDescendingByteArray
filterIndexedToIntArray
toListByteArray
elementAtOrNullByteArray
noneDoubleArray
toSetDoubleArray
mapIndexedDoubleArray
lastByteArray
reduceIndexedFloatArray
lastIndexLongArray
singleOrNullLongArray
mapIndexedShortArray
indexOfLastArray
toCollectionDoubleArray
getOrNullLongArray
indicesFloatArray
firstOrNullDoubleArray
toHashSetArray
getOrNullFloatArray
reverseArray
associateByToBooleanArray
findLastLongArray
firstOrNullCharArray
dropArray
distinctByFloatArray
asSequenceShortArray
reverseShortArray
filterNotByteArray
dropWhileBooleanArray
filterNotShortArray
sortedByDoubleArray
filterIndexedLongArray
mapToBooleanArray
groupByArray
flattenShortArray
lastCharArray
isNotEmptyDoubleArray
reduceArray
associateToLongArray
distinctByBooleanArray
minByArray
dropLastWhileFloatArray
sortedDescendingIntArray
getOrElseByteArray
joinToStringDoubleArray
dropWhileCharArray
toMutableListFloatArray
indexOfFirstShortArray
filterShortArray
sliceDoubleArray
indexOfLastCharArray
joinToStringShortArray
groupByToBooleanArray
forEachIndexedByteArray
foldIndexedFloatArray
distinctFloatArray
foldRightIndexedIntArray
indexOfLastArray
sliceLongArray
reversedCharArray
partitionDoubleArray
maxByByteArray
component1ShortArray
isNotEmptyArray
dropWhileDoubleArray
dropLastShortArray
isEmptyDoubleArray
toMutableSetByteArray
lastIndexByteArray
asIterableByteArray
reversedLongArray
sortedDescendingDoubleArray
flatMapIntArray
randomCharArray
singleByteArray
reverseArray
asIterableIntArray
intersectArray
toCharArrayFloatArray
asIterableCharArray
indexOfDoubleArray
reversedByteArray
toCollectionLongArray
foldRightIndexedCharArray
randomArray
component5Array
component3Array
component2Array
component1DoubleArray
lastIndexDoubleArray
minShortArray
minWithIntArray
distinctByFloatArray
zipByteArray
partitionCharArray
sortedArrayShortArray
intersectArray
lastIndexFloatArray
filterIndexedCharArray
filterNotToByteArray
sortDescendingBooleanArray
anyArray
indexOfDoubleArray
sortedWithLongArray
maxArray
lastOrNullIntArray
associateCharArray
joinToLongArray
mapIntArray
averageBooleanArray
maxWithBooleanArray
indexOfLastCharArray
reversedArrayShortArray
sliceArrayDoubleArray
takeLastIntArray
joinToLongArray
sortedByShortArray
toMutableListLongArray
filterNotByteArray
associateByToDoubleArray
forEachIndexedArray
forEachIndexedDoubleArray
partitionLongArray
forEachByteArray
associateCharArray
sortedByIntArray
isNotEmptyByteArray
isEmptyShortArray
minArray
partitionLongArray
associateByBooleanArray
containsArray
sortedArrayDescendingArray
toByteArrayBooleanArray
withIndexFloatArray
filterToByteArray
lastIndexOfShortArray
reduceIndexedFloatArray
toHashSetIntArray
minWithShortArray
toMutableSetShortArray
sortedBooleanArray
takeLastWhileDoubleArray
toListDoubleArray
sumByFloatArray
takeLastWhileArray
groupByCharArray
firstOrNullDoubleArray
indicesByteArray
dropLastWhileDoubleArray
sortedArrayArray
sortDescendingArray
toListDoubleArray
indexOfFirstLongArray
groupByToShortArray
forEachByteArray
singleDoubleArray
firstDoubleArray
firstOrNullByteArray
minWithFloatArray
forEachIntArray
minByLongArray
toListIntArray
dropLastWhileCharArray
sortedByDescendingShortArray
sortedByDescendingFloatArray
countByteArray
dropLastIntArray
toSetIntArray
sortedByteArray
randomBooleanArray
toListArray
sortedDescendingDoubleArray
asSequenceShortArray
averageIntArray
component5IntArray
component4IntArray
component3IntArray
component2IntArray
component1Array
reduceIndexedShortArray
sortedDescendingIntArray
singleOrNullByteArray
sumDoubleArray
maxFloatArray
getOrNullIntArray
withIndexIntArray
filterNotFloatArray
foldDoubleArray
takeWhileArray
foldRightIndexedLongArray
anyShortArray
reversedArrayCharArray
associateByToFloatArray
minWithIntArray
sumByDoubleIntArray
lastOrNullBooleanArray
asSequenceCharArray
withIndexLongArray
zipLongArray
sliceArrayLongArray
noneShortArray
filterIndexedBooleanArray
groupByToComparator
thenDescendingComparator
thenByComparator
thenByDescendingComparator
thenComparatorComparator
reversedComparator
thenLazy
getValueByte
orShort
or	Short
invByte
inv	Short
andByte
and	Short
xorByte
xorShort
toUByteInt
toUByteLong
toUByteByte
toUByteDouble
toULongInt
toULongLong
toULongByte
toULongShort
toULongFloat
toULongResult
throwOnFailureResult
getOrElseResult
foldResult
recoverCatchingResult
getOrDefaultResult
mapCatchingResult
getOrThrow
Result
mapResult
onSuccessAny
runCatchingResult
recoverResult
onFailureTriple
toListAny
toPair
toListLong
toUShortByte
toUShortShort
toUShortInt
toUShortAny
hashCodeKProperty0
isInitializedAny
takeUnlessAny
run
Any
takeIf	Any
applyAny
alsoAny
letDouble
toUInt
Int
toUIntShort
toUIntLong
toUIntFloat
toUIntByte
toUInt0CollectionAssertionSession
elementAtShouldComply.CollectionAssertionSession
lastElementShouldBe,CollectionAssertionSession
elementAtShouldBe&CollectionAssertionSession
shouldBeSet'CollectionAssertionSession
sizeShouldBe#CollectionAssertionSession
shouldBe&CollectionAssertionSession
containsAllIterator
remainingMatchGroupCollection
getSequence
asStreamStream
asSequenceLongStream
toListIntStream
asSequenceDoubleStream
toListDoubleStream
asSequenceLongStream
asSequenceIntStream
toListStream
toListMap
getOrDefaultMutableMap
removeFile
walkBottomUpFile
walkTopDown	File
walkFile
isRootedString
getRootLengthFile
subPathFile
rootName	File
rootFile
toComponentsFilePathComponents
normalizeList
normalizeFile
resolveFile
toRelativeStringOrNullFile
endsWithFile
extensionFile
resolveSiblingFile
normalizeFile
invariantSeparatorsPathFile
relativeToFile
relativeToOrSelfFile
nameWithoutExtensionFile
relativeToOrNullFile
startsWithFile
deleteRecursivelyFile
copyRecursivelyFile
toRelativeStringFile
copyToCloseable
closeFinallyCloseable
useOutputStream
bufferedInputStream
readBytesInputStream
copyToInputStream
bufferedReaderOutputStream
bufferedWriterByteArray
inputStreamString
byteInputStreamBufferedInputStream
iteratorOutputStream
writerInputStream
readerInputStream
bufferedCharBuffer
offloadPrefixToCharsetDecoder
tryDecodeBuffer
flipBack CharBuffer
endsWithLineSeparatorReader
useLinesWriter
bufferedReader
bufferedReader
copyToURL
readBytesReader
readLinesReader
forEachLineURL
readTextString
readerReader
readTextBufferedReader
lineSequenceFile
readLinesFile
outputStreamFile
appendTextFile
forEachBlockFile
readerFile
readBytesFile
inputStreamFile
bufferedReaderFile
writeTextFile
readTextFile
forEachLineFile
printWriterFile
useLinesFile
appendBytesFile
writerFile
writeBytesFile
bufferedWriterAutoCloseable
useAutoCloseable
closeFinallyClass
kotlinKClass
javaClassAnnotation
annotationClassArray
isArrayOfKClass
javaKClass
javaPrimitiveTypeKClass
javaObjectTypeAny
javaClassPattern
toRegexChar
isHighSurrogateChar
isLowSurrogateChar
toTitleCaseChar
isJavaIdentifierStartChar
categoryChar
directionalityChar
toLowerCaseChar
toUpperCaseChar
isJavaIdentifierPartChar
isDefinedChar
isLowerCaseChar
isDigitChar
isLetterOrDigitChar
isWhitespaceChar
isIdentifierIgnorableChar
isLetterChar
isTitleCaseChar
isISOControlChar
isUpperCaseMatchResult
rangeIterable
toIntMatcher
findNextMatcher
matchEntireAppendable
appendlnStringBuilder
appendlnStringBuilder
clearStringBuilder
setString
toFloatString
toDoubleOrNullString
toShortString
toIntString
toBigIntegerOrNullString
toBigDecimalInt
toStringString
toFloatOrNullLong
toStringString
toLongString
toBigDecimalOrNullString
toDoubleString
toByteShort
toStringString
toBigIntegerString
toBooleanByte
toStringFloat
roundToLongFloat
nextDownDouble
roundToLongDouble
nextUp
Float
signDouble
signInt
absoluteValueDouble
roundToIntDouble
IEEEremLong
absoluteValueDouble
nextTowardsDouble
withSign	Long
signInt
signDouble
absoluteValueFloat
absoluteValue
Double
powFloat
nextTowardsFloat
nextUpDouble
nextDown
Double
ulpFloat
withSign	Float
ulpFloat
roundToInt	Float
powFloat
IEEEremRandom
asKotlinRandomRandom
asJavaRandomFloat
rangeToLock
withLockReentrantReadWriteLock
writeReentrantReadWriteLock
readThreadLocal
getOrSetTimer
scheduleTimer
scheduleAtFixedRate/BaseContinuationImpl
getDebugMetadataAnnotationBaseContinuationImpl
getLabel-BaseContinuationImpl
getStackTraceElementImpl3BaseContinuationImpl
getSpilledVariableFieldMapping-SuspendFunction0
createCoroutineUnintercepted-SuspendFunction1
createCoroutineUnintercepted)SuspendFunction1
createCoroutineUnchecked)SuspendFunction0
createCoroutineUnchecked#CoroutineContext
toCoroutineContext'Function2
toExperimentalSuspendFunction1ContinuationInterceptor
toContinuationInterceptorContinuation
toContinuation/CoroutineContext
toExperimentalCoroutineContext'Function1
toExperimentalSuspendFunction'Continuation
toExperimentalContinuation'Function3
toExperimentalSuspendFunction=ContinuationInterceptor
toExperimentalContinuationInterceptorMap
toSingletonMapOrSelfMap
toSortedMapMap
toSingletonMapMap
toPropertiesConcurrentMap
getOrPutByteArray
toStringCollection
toTypedArrayArray
orEmptyMutableMap
mapValuesInPlaceGrouping
eachCountEnumeration
iteratorEnumeration
asSequenceArray
copyToArrayOfAnyEnumeration
toListMutableList
fillMutableList
sortWithMutableList
sortCharSequence
elementAtCharSequence
toSortedSetUShortArray
binarySearchUIntArray
binarySearchUIntArray
fillUIntArray
asListUShortArray
fillULongArray
fillUShortArray
asListUByteArray
fillULongArray
binarySearchULongArray
asListUByteArray
elementAtUByteArray
binarySearchUIntArray
elementAtUByteArray
asListULongArray
elementAtUShortArray
elementAtSequence
toSortedSetSequence
filterIsInstanceToSequence
filterIsInstanceMutableList
reverseIterable
filterIsInstanceIterable
toSortedSetIterable
filterIsInstanceToByteArray
contentHashCodeFloatArray
copyOfRangeImplLongArray
contentToStringLongArray
contentEqualsShortArray
toSortedSetLongArray
asListBooleanArray
copyOfShortArray
binarySearchLongArray
contentHashCodeByteArray
copyInto
Array
sortCharArray
copyOfBooleanArray
contentEqualsArray
asListIntArray
contentEqualsFloatArray
toSortedSet
Array
fillFloatArray
contentToStringArray
plusElementShortArray
contentEqualsCharArray
toTypedArrayDoubleArray
sortBooleanArray
fillLongArray
sortArray
contentEqualsDoubleArray
fillByteArray
copyOfLongArray
fillIntArray
asListFloatArray
copyIntoIntArray
elementAtArray
binarySearchIntArray
copyIntoBooleanArray
copyIntoLongArray
elementAtIntArray
sortShortArray
sortFloatArray
asListArray
contentDeepToStringDoubleArray
copyIntoIntArray
fillByteArray
copyOfRangeCharArray
contentEqualsDoubleArray
binarySearchShortArray
fillLongArray
binarySearchByteArray
toTypedArrayArray
contentHashCodeBooleanArray
elementAtShortArray
toTypedArrayDoubleArray
copyOfArray
contentDeepHashCodeIntArray
copyOfRangeImplBooleanArray
copyOfRangeImplBooleanArray
contentHashCodeLongArray
toSortedSetArray
copyOfRangeImplFloatArray
binarySearchIntArray
contentToStringLongArray
copyOfCharArray
sortLongArray
copyOfRangeCharArray
copyOfRangeImplCharArray
toSortedSetArray
sortWithCharArray
copyIntoFloatArray
fill
Array
plusArray
copyOfBooleanArray
contentToStringCharArray
copyOfRangeBooleanArray
plusFloatArray
toTypedArrayDoubleArray
copyOfRangeShortArray
copyOfFloatArray
plusDoubleArray
toTypedArrayDoubleArray
plusBooleanArray
toSortedSetLongArray
plusByteArray
toSortedSetArray
copyIntoDoubleArray
toSortedSetIntArray
contentHashCodeArray
toSortedSetIntArray
copyOfIntArray
toSortedSetFloatArray
contentEqualsShortArray
asListBooleanArray
copyOfRangeCharArray
asListIntArray
plusFloatArray
copyOfRangeIntArray
copyOfRangeArray
contentToStringShortArray
plusByteArray
sortShortArray
copyOfRangeImplArray
contentDeepEqualsArray
filterIsInstanceToIntArray
binarySearchByteArray
contentEqualsByteArray
fillByteArray
asListArray
elementAtIntArray
toTypedArrayBooleanArray
asListArray
filterIsInstance	Array
sumDouble
toBitsCompanion
fromBitsFloat
isInfiniteFloat
toBitsDouble
isNaNDouble
toRawBitsFloat
isFiniteFloat
isNaNFloat
toRawBitsDouble
isInfiniteDouble
isFiniteCharArray
elementAtShortArray
copyOfRangeByteArray
plusFloatArray
sortCharArray
contentHashCodeFloatArray
elementAtArray
copyOfRangeByteArray
elementAtLongArray
copyIntoCharArray
fillCharArray
contentToStringShortArray
elementAtCharArray
binarySearchLongArray
toTypedArrayBooleanArray
toTypedArrayDoubleArray
contentToStringFloatArray
copyOfShortArray
contentToStringByteArray
contentToStringCharArray
plusLongArray
copyOfRangeImplDoubleArray
contentEqualsDoubleArray
asListShortArray
copyIntoByteArray
copyOfRangeImplFloatArray
contentHashCodeDoubleArray
elementAtDoubleArray
contentHashCodeShortArray
contentHashCodeString
internString
capitalize Companion
CASE_INSENSITIVE_ORDERCharSequence
isBlankCharArray
concatToStringString
codePointAtString
regionMatchesString
codePointBeforeString
toByteArrayString
codePointCountString
offsetByCodePointsString
toUpperCaseString
contentEqualsString
nativeIndexOfString
toCharArrayString
nativeLastIndexOfString
replaceFirstCompanion
formatString
replaceCharSequence
repeatString
toLowerCaseString
formatString
startsWithString
endsWithString
encodeToByteArrayString
compareToByteArray
decodeToStringCharSequence
splitString
equalsString
decapitalizeString
toPatternCharSequence
regionMatchesCollection
ifEmptyList
indexOfFirstArray
ifEmptyMap
ifEmptyCaller
arity-CallableMemberDescriptor
expectedReceiverType Any
coerceToExpectedReceiverTypeClass
getBoxMethodKotlinType
toInlineClass+Caller
createInlineClassAwareCallerIfNeeded#DeclarationDescriptor
toInlineClass/CallableMemberDescriptor
hasInlineClassReceiverClass
getUnboxMethodAny
transformKotlinToJvmConstantValue
toRuntimeValue)AnnotationDescriptor
toAnnotationInstanceClassDescriptor
toJavaClassAny
asKPropertyImpl,CallableDescriptor
instanceReceiverParameterAnnotated
computeAnnotationsVisibility
toKVisibilityAny
asKFunctionImplAny
asKCallableImpl
Class
descClass
createArrayTypeClass
functionClassArityClass
wrapperByPrimitive,Class
isEnumClassOrSpecializedEnumEntryClassClass
primitiveByWrapperClass
classIdClass
safeClassLoaderType
parameterizedTypeArgumentsClassLoader
tryLoadClassArray
getAnnotationsArray
findAnnotationClassId
toRuntimeFqName!Accessor
computeCallerForAccessor6PropertyDescriptor
isJvmFieldPropertyInCompanionObjectAccessor
boundReceiverClass
getOrCreateModuleMethod
signatureKClassifier
jvmErasureKType
jvmErasureKClass
jvmNameFunction
reflectKProperty
javaGetterField
kotlinPropertyKProperty
javaFieldConstructor
kotlinFunctionMethod
kotlinFunctionKType
javaTypeMember
getKPackageKFunction
javaMethodKMutableProperty
javaSetterKFunction
javaConstructorKType
isSubtypeOfKType
withNullabilityKType
isSupertypeOfKCallable
isAccessibleKCallable
findParameterByNameKCallable
callSuspendKCallable
valueParametersKCallable
instanceParameter$KCallable
extensionReceiverParameterKCallable
callSuspendByKProperty1
getExtensionDelegateKProperty2
getExtensionDelegate KAnnotatedElement
findAnnotationKAnnotatedElement
hasAnnotationKClassifier
starProjectedTypeKClassifier
createType'KClass
declaredMemberExtensionFunctionsKClass
superclassesKClass
declaredMemberFunctionsKClass
allSupertypes(KClass
declaredMemberExtensionPropertiesKClass
declaredMemberPropertiesKClass
safeCastKClass
isSubclassOfKClass
isSuperclassOfKCallableImpl
isNotExtensionKClass
allSuperclasses KClass
memberExtensionPropertiesKClass
memberFunctionsKClass
functionsKClass
primaryConstructorKClass
memberPropertiesKClass
castKClass
staticFunctionsKClass
companionObjectInstanceKCallableImpl
isExtensionKClass
memberExtensionFunctionsKClass
companionObjectKClass
staticPropertiesKClass
declaredFunctionsKClass
createInstanceKClass
declaredMembersKClass
defaultTypeAny
containsAny
ifBlankCharSequence
ifEmptyCharSequence
ifBlank=ExperimentalContinuationInterceptor
toContinuationInterceptor'ExperimentalContinuation
toContinuation/ExperimentalCoroutineContext
toCoroutineContextTypeUsage
toAttributes+TypeParameterDescriptor
getErasedUpperBound&LazyJavaResolverContext
childForMethod7LazyJavaResolverContext
computeNewDefaultTypeQualifiers8LazyJavaResolverContext
copyWithNewDefaultTypeQualifiers)LazyJavaResolverContext
replaceComponentsLazyJavaResolverContext
child.LazyJavaResolverContext
childForClassOrPackage:LazyJavaResolverContext
extractDefaultNullabilityQualifierAny
ifEmptySequence
sum SuspendFunction0
createCoroutineSuspendFunction0
startCoroutineSuspendFunction1
startCoroutine SuspendFunction1
createCoroutineIterable
sumMap
getValueThrowable
addSuppressedThrowable
stackTraceThrowable
printStackTraceBigDecimal
remLong
toBigDecimalBigDecimal
incDouble
toBigDecimalBigDecimal
decBigDecimal
timesFloat
toBigDecimalBigDecimal
plusBigDecimal
modBigDecimal
divInt
toBigDecimalBigDecimal
unaryMinusBigDecimal
minusBigInteger
toBigDecimalInt
toBigIntegerBigInteger
andBigInteger
shrLong
toBigIntegerBigInteger
incBigInteger
invBigInteger
shlBigInteger
unaryMinusBigInteger
decBigInteger
xorBigInteger
timesBigInteger
minusBigInteger
orBigInteger
plusBigInteger
remBigInteger
divString
plusAny
toStringContinuation
intercepted4SuspendFunction1
startCoroutineUninterceptedOrReturn4SuspendFunction0
startCoroutineUninterceptedOrReturnArray
contentDeepHashCodeImplMutableList
shuffleIterable
shuffledByteArray
binarySearchDoubleArray
copyOfRangeImplString
substringAny
errorMessagePropertyDescriptor
isJavaField*LazyJavaResolverContext
resolveAnnotationsKotlinType
lexicalCastFromJavaClass
classId(JavaAnnotationOwner
buildLazyValueForMap<DeserializedMemberDescriptor
getImplClassNameForDeserialized3ValueParameterDescriptor
getParameterNameAnnotation1DeserializedMemberDescriptor
isFromJvmPackagePart6ValueParameterDescriptor
getDefaultValueFromAnnotation-ClassDescriptor
getParentJavaStaticClassScope!List
compositeAnnotationsOrSingleSimpleType
enhanceInflexible%UnwrappedType
enhancePossiblyFlexible!KotlinType
getEnhancedNullabilityAny
enhancedMutabilityAny
enhancedNullability#TypeComponentPosition
shouldEnhanceKotlinType
enhance&ClassifierDescriptor
enhanceMutability!KotlinType
hasEnhancedNullabilityAny
noChange
Set
select@CallableMemberDescriptor
doesOverrideBuiltinWithDifferentJvmName#CallableMemberDescriptor
isFromJava5ClassDescriptor
hasRealKotlinSuperClassWithOverrideOfFqNameUnsafe
childSafe4CallableMemberDescriptor
getOverriddenSpecialBuiltinFqName
childDCallableMemberDescriptor
getOverriddenBuiltinReflectingJvmDescriptor-CallableMemberDescriptor
isFromJavaOrBuiltinsString
methodACallableMemberDescriptor
getOverriddenBuiltinWithDifferentJvmName,ClassDescriptor
isAnnotatedWithTypeQualifier!KotlinClassFinder
findKotlinClassCompanion
loadModuleMappingJvmTypeFactory
boxTypeIfNeeded'FunctionDescriptor
computeJvmDescriptorStringBuilder
appendErasedTypeKotlinType
mapToJvmTypeClassDescriptor
internalNameClassId
internalName&CallableDescriptor
computeJvmSignatureFqName
parentOrNullFqName
tailFqName
isSubpackageOfFqName
isChildOfFqName
isOneSegmentFQNCollection
concat"FunctionDescriptor
isValidOperatorTypeConstructor
debugInfoKotlinType
approximateSimpleType
isIntegerLiteralType!SimpleType
isSingleClassifierType2UnwrappedType
hasSupertypeWithGivenTypeConstructorSimpleType
isClassType%UnwrappedType
anySuperTypeConstructorSimpleType
isIntersectionTypeVariance
convertVarianceUnwrappedType
typeDepthInternalSimpleType
typeDepthInternalKotlinType
isErrorKotlinType
isNullableKotlinType
isNullableAnyKotlinType
unCaptureKotlinType
isNotNullThrowableKotlinType
containsErrorKotlinType
isFloatKotlinType
containsTypeAliasesKotlinType
isArrayOfNothingKotlinType
replaceAnnotationsKotlinType
isAnyOrNullableAnyAbbreviatedType
unCapture'KotlinType
getImmediateSuperclassNotAnyKotlinType
isUnitKotlinType
isSubtypeOfKotlinType
supertypesKotlinType
isInterfaceKotlinType
isIntKotlinType
makeNullableKotlinType
asTypeProjectionKotlinType
isDoubleKotlinType
makeNotNullable KotlinType
isPrimitiveNumberType'KotlinType
isSignedOrUnsignedNumberTypeKotlinType
isLongKotlinType
isTypeParameterKotlinType
isCharKotlinType
isByteKotlinType
isEnum0TypeParameterDescriptor
representativeUpperBoundKotlinType
contains&KotlinType
containsTypeAliasParametersKotlinType
nullability%NewCapturedType
unCaptureTopLevelTypeKotlinType
constituentTypesKotlinType
isShortKotlinType
isUnsignedNumberTypeKotlinType
builtInsList
defaultProjectionsKotlinType
immediateSupertypesSimpleType
replaceArgumentsWithKotlinType
isNullableNothing,KotlinType
expandIntersectionTypeIfNecessary.KotlinType
replaceArgumentsWithStarProjections*KotlinType
isPrimitiveNumberOrNullableTypeCollection
closure&KotlinType
replaceArgumentsWithNothingKotlinType
isNothing%KotlinType
isBooleanOrNullableBooleanKotlinType
replaceArgumentsWithUnwrappedType
unCapture)UnwrappedType
canHaveUndefinedNullabilityKotlinType
isDefaultBound#KotlinTypeChecker
equalTypesOrNullsKotlinType
isBoolean6KotlinType
upperBoundedByPrimitiveNumberOrNullableTypeSimpleType
unCapture%KotlinType
isNothingOrNullableNothingKotlinType
cannotBeReified5KotlinType
containsTypeProjectionsInTopLevelArguments%KotlinType
requiresTypeAliasExpansion)ClassifierDescriptor
isTypeAliasParameterTypeProjection
substituteKotlinType
isDynamic KotlinType
isNullabilityFlexibleKotlinType
lowerIfFlexibleKotlinType
isFlexible#Collection
singleBestRepresentativeKotlinType
asFlexibleTypeKotlinType
upperIfFlexible KotlinType
getCustomTypeVariable#KotlinType
getSubtypeRepresentative%KotlinType
getSupertypeRepresentativeKotlinType
isCustomTypeVariableKotlinType
replaceSimpleType
replaceKotlinType
asSimpleType*TypeParameterDescriptor
starProjectionTypeUnwrappedType
wrapEnhancement UnwrappedType
inheritEnhancementKotlinType
getEnhancementKotlinType
unwrapEnhancement KotlinType
isFunctionPlaceholderKotlinType
getAbbreviation,UnwrappedType
makeDefinitelyNotNullOrNotNull"KotlinType
isDefinitelyNotNullType9KotlinType
makeIntersectionTypeDefinitelyNotNullOrNotNull3SimpleType
makeSimpleTypeDefinitelyNotNullOrNotNull:IntersectionTypeConstructor
makeDefinitelyNotNullOrNotNullKotlinType
getAbbreviatedTypeSimpleType
withAbbreviation/IntersectionTypeConstructor
transformComponentsAny
sureMutableMap
getOrPutNullableIterable
keysToMapArrayList
compactMutableCollection
addIfNotNullSequenceScope
yieldIfNotNullIterable
keysToMapExceptNullsIterable
mapToIndex$Throwable
isProcessCanceledExceptionString
lastIndexOfOrNullSequence
firstIsInstanceOrNullArray
ifNotEmptyArray
firstIsInstanceOrNullArray
firstNotNullResultIterable
flatMapToNullableIterable
flattenToIterable
sumByLongIterable
firstIsInstanceString
indexOfOrNullSequence
firstIsInstanceAny
castIterable
lastIsInstanceOrNullArray
firstIsInstanceAny
assertedCast
Any
safeAs	Pair
swapIterable
firstNotNullResultIterable
firstIsInstanceOrNullCollection
ifNotEmpty#String
decapitalizeSmartForCompilerString
isUpperCaseCharAtString
isLowerCaseCharAtString
decapitalizeSmartString
toLowerCaseAsciiOnlyString
decapitalizeAsciiOnlyString
capitalizeAsciiOnlyString
toUpperCaseAsciiOnlyString
capitalizeFirstWordTypeProjection
toTypeArgumentTypeArgument
toTypeProjectionKotlinType
replaceTypeArguments.TypeSubstitution
wrapWithCapturingSubstitution%TypeProjection
createCapturedIfNeededKotlinType
isCaptured7DeclarationDescriptor
isInlineClassThatRequiresMangling,KotlinType
isInlineClassThatRequiresMangling'KotlinType
requiresFunctionNameMangling<KotlinType
isTypeParameterWithUpperBoundThatRequiresManglingMemberScope
computeAllNames"MemberScope
getDescriptorsFiltered'Collection
flatMapClassifierNamesOrNull,SyntheticScopes
collectSyntheticConstructors/SyntheticScopes
collectSyntheticStaticFunctions/SyntheticScopes
collectSyntheticMemberFunctions3SyntheticScopes
collectSyntheticExtensionProperties&ModuleDescriptor
allSignedLiteralTypesKotlinType
maxValueModuleDescriptor
unsignedTypeModuleDescriptor
uIntType(ModuleDescriptor
allUnsignedLiteralTypesModuleDescriptor
uLongTypeKotlinType
minValueModuleDescriptor
uShortTypeModuleDescriptor
uByteTypeByte
fromUByteToLongInt
fromUIntToLongShort
fromUShortToLong:MutableCollection
retainMostSpecificInEachOverridableGroup3CallableDescriptor
findTopMostOverriddenDescriptors;CallableDescriptor
findOriginalTopMostOverriddenDescriptors3Collection
selectMostSpecificInEachOverridableGroup"DeclarationDescriptor
isAncestorOf.ClassifierDescriptorWithTypeParameters
classId%DeclarationDescriptor
parentsWithSelf)DeclarationDescriptor
isExtensionProperty!DeclarationDescriptor
isExtension%ModuleDescriptor
resolveTopLevelClass*CallableDescriptor
varargParameterPosition,ClassDescriptor
getAllSuperclassesWithoutAnyDeclarationDescriptor
builtIns4ClassDescriptor
getAllSuperClassesTypesIncludeItself&FunctionDescriptor
isEnumValueOfMethod"ClassDescriptor
getSuperClassOrAny"AnnotationDescriptor
firstArgumentDeclarationDescriptor
parents%ClassDescriptor
secondaryConstructors#ClassDescriptor
getSuperClassNotAny#Iterable
filterOutSourceAnnotationsAnnotated
nonSourceAnnotations:DeclarationDescriptorWithVisibility
isEffectivelyPublicApi1CallableDescriptor
overriddenTreeUniqueAsSequence-DeclarationDescriptor
getImportableDescriptor DeclarationDescriptor
fqNameSafe-DeclarationDescriptor
isAnnotationConstructor+CallableMemberDescriptor
propertyIfAccessor Annotated
isRepeatableAnnotation$AnnotationDescriptor
annotationClass@CallableDescriptor
getOwnerForEffectiveDispatchReceiverParameter Annotated
isDocumentedAnnotation?ClassifierDescriptorWithTypeParameters
classValueTypeDescriptor=ClassifierDescriptorWithTypeParameters
denotedClassDescriptor"DeclarationDescriptor
fqNameUnsafe,CallableMemberDescriptor
setSingleOverridden7DeclarationDescriptor
isPrimaryConstructorOfInlineClass*DeclarationDescriptor
isInsidePrivateClass$ClassDescriptor
classValueDescriptor7ValueParameterDescriptor
declaresOrInheritsDefaultValue'AnnotationDescriptor
isSourceAnnotation&MemberDescriptor
isEffectivelyExternal'ClassDescriptor
classesFromInnerToOuter9ClassifierDescriptorWithTypeParameters
hasCompanionObject1CallableMemberDescriptor
overriddenTreeAsSequence"ClassDescriptor
getSuperInterfacesDeclarationDescriptor
moduleClassDescriptor
isSubclassOf+ClassifierDescriptor
getAllSuperClassifiers-ClassDescriptor
getClassObjectReferenceTarget'ClassDescriptor
hasClassValueDescriptor+DeclarationDescriptor
isEffectivelyExternal(CallableMemberDescriptor
firstOverriddenClassDescriptor
classValueType$DeclarationDescriptor
isPublishedApi"DeclarationDescriptor
fqNameOrNull;DeclarationDescriptorWithVisibility
isEffectivelyPrivateApi Annotated
getAnnotationRetention'DeclarationDescriptor
isCompanionObjectClassifierDescriptor
classIdKotlinType
isInlineClassType<CallableDescriptor
isGetterOfUnderlyingPropertyOfInlineClass+KotlinType
unsubstitutedUnderlyingParameter4VariableDescriptor
isUnderlyingPropertyOfInlineClass%KotlinType
isRecursiveInlineClassType(ClassDescriptor
underlyingRepresentation$KotlinType
substitutedUnderlyingType*KotlinType
isRecursiveInlineClassTypeInner&KotlinType
unsubstitutedUnderlyingType#KotlinType
isNullableUnderlyingType#DeclarationDescriptor
isInlineClass'MemberDescriptor
getMultiTargetPlatform'ModuleDescriptor
getMultiTargetPlatformKotlinType
hasExactAnnotation%FqName
isInternalAnnotationForResolve+Annotations
hasInternalAnnotationForResolve0CallableDescriptor
hasDynamicExtensionAnnotation,CallableDescriptor
hasHidesMembersAnnotation5CallableDescriptor
hasLowPriorityInOverloadResolution0CallableDescriptor
hasBuilderInferenceAnnotation&AnnotationDescriptor
isExactAnnotationKotlinType
hasNoInferAnnotation3TypeParameterDescriptor
hasOnlyInputTypesAnnotationNullableLazyValue
getValueNotNullLazyValue
getValue1KotlinType
getValueParameterTypesFromFunctionTypeKotlinType
replaceReturnType3KotlinType
isTypeAnnotatedWithExtensionFunctionType+KotlinType
isBuiltinExtensionFunctionalType#FqNameUnsafe
getFunctionalClassKindKotlinType
isFunctionType!KotlinType
isKSuspendFunctionType"KotlinType
isExtensionFunctionTypeKotlinType
isTypeOrSubtypeOf KotlinType
isSuspendFunctionType"KotlinType
isBuiltinFunctionalType+KotlinType
isBuiltinFunctionalTypeOrSubtype)KotlinType
isSuspendFunctionTypeOrSubtype*KotlinType
getReceiverTypeFromFunctionType"KotlinType
isFunctionTypeOrSubtype%KotlinType
isNonExtensionFunctionType7KotlinType
extractParameterNameFromFunctionTypeArgument*KotlinType
isFunctionOrSuspendFunctionType(KotlinType
getReturnTypeFromFunctionType,DeclarationDescriptor
getFunctionalClassKindFqNameUnsafe
renderName
renderFqName
renderName
shouldBeEscaped1CallableMemberDescriptor
isOverridableOrOverridesClassDescriptor
isFinalClass&CallableMemberDescriptor
isOverridableClassDescriptor
isFinalOrEnum)KotlinBuiltIns
createDeprecatedAnnotation'AnnotationDescriptor
abbreviationFqNameKotlinType
canBeUsedForConstVal0ModuleDescriptor
findContinuationClassDescriptor)DeclarationDescriptor
isTopLevelInPackage+ModuleDescriptor
getContinuationOfTypeOrAny%ModuleDescriptor
resolveClassByFqName6ModuleDescriptor
findContinuationClassDescriptorOrNull6ModuleDescriptor
findNonGenericClassAcrossDependencies2ModuleDescriptor
findClassAcrossModuleDependencies6ModuleDescriptor
findTypeAliasAcrossModuleDependencies7TypeParameterDescriptor
capturedCopyForInnerDeclarationGClassifierDescriptorWithTypeParameters
computeConstructorTypeParameters!KotlinType
buildPossiblyInnerTypeVisibility
forVisibility#ClassDescriptor
effectiveVisibility7DeclarationDescriptorWithVisibility
effectiveVisibilitySet
leastPermissive)ClassifierDescriptor
dependentDescriptorsKotlinType
dependentDescriptors$KotlinType
leastPermissiveDescriptor)VariableDescriptorWithAccessors
accessorsLookupTracker
record!LookupTracker
recordPackageLookupNameResolver
getNameNameResolver
getClassId                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    